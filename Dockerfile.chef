ARG RUST_VERSION=1.87.0
ARG APP_NAME=ben

################################################################################
# Chef stage for optimal dependency caching

FROM rust:${RUST_VERSION}-slim AS chef
RUN cargo install cargo-chef
WORKDIR /app

FROM chef AS planner
COPY Cargo.toml Cargo.lock ./
COPY src ./src
RUN cargo chef prepare --recipe-path recipe.json

################################################################################
# Build dependencies stage

FROM chef AS dependencies
COPY --from=planner /app/recipe.json recipe.json

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Build dependencies (cached layer)
RUN --mount=type=cache,target=/app/target/ \
    --mount=type=cache,target=/usr/local/cargo/git/db \
    --mount=type=cache,target=/usr/local/cargo/registry/ \
    cargo chef cook --release --recipe-path recipe.json

################################################################################
# Build application stage

FROM dependencies AS build
ARG APP_NAME

# Copy source code
COPY Cargo.toml Cargo.lock ./
COPY src ./src

# Build the application
RUN --mount=type=cache,target=/app/target/ \
    --mount=type=cache,target=/usr/local/cargo/git/db \
    --mount=type=cache,target=/usr/local/cargo/registry/ \
    cargo build --locked --release && \
    cp ./target/release/$APP_NAME /usr/local/bin/server

# Strip binary to reduce size
RUN strip /usr/local/bin/server

################################################################################
# Runtime stage using distroless

FROM gcr.io/distroless/cc-debian12:latest AS runtime

# Copy CA certificates for HTTPS requests
COPY --from=dependencies /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copy the compiled binary
COPY --from=build /usr/local/bin/server /usr/local/bin/server

# Copy config file
COPY --chown=nonroot:nonroot config.yml /app/config.yml

# Switch to non-root user
USER nonroot

# Set working directory
WORKDIR /app

# Expose port
EXPOSE 5900

# Use exec form for better signal handling
ENTRYPOINT ["/usr/local/bin/server"]
